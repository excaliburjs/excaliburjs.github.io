"use strict";(self.webpackChunkexcaliburjs_github_io=self.webpackChunkexcaliburjs_github_io||[]).push([[4443],{2099:function(e,n,s){s.r(n),s.d(n,{Head:function(){return E},default:function(){return f}});var a=s(1151),t=s(7294);function o(e){const n=Object.assign({p:"p",a:"a",h2:"h2",span:"span",code:"code",ul:"ul",li:"li",h3:"h3"},(0,a.ah)(),e.components),{IFrameEmbed:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("IFrameEmbed",!0),t.createElement(t.Fragment,null,t.createElement(n.p,null,"Core behavior in Excalibur is implemented by Systems. Systems process all entities that have matching component types and perform some action."),"\n",t.createElement(n.p,null,"Examples of systems are the ",t.createElement(n.a,{href:"/docs/api/edge/classes/GraphicsSystem.html",title:"View 'GraphicsSystem' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"GraphicsSystem"),", ",t.createElement(n.a,{href:"/docs/api/edge/classes/MotionSystem.html",title:"View 'MotionSystem' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"MotionSystem"),", ",t.createElement(n.a,{href:"/docs/api/edge/classes/CollisionSystem.html",title:"View 'CollisionSystem' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"CollisionSystem"),", and ",t.createElement(n.a,{href:"/docs/api/edge/classes/DebugSystem.html",title:"View 'DebugSystem' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"DebugSystem")),"\n",t.createElement(n.h2,{id:"system",style:{position:"relative"}},t.createElement(n.a,{href:"#system","aria-label":"system permalink",className:"anchor before"},t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"System"),"\n",t.createElement(n.p,null,"Each Excalibur ",t.createElement(n.a,{href:"/docs/api/edge/classes/System.html",title:"View 'System' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"System")," loops through all entities in ",t.createElement(n.code,null,"System.priority")," order."),"\n",t.createElement(n.h2,{id:"system-types",style:{position:"relative"}},t.createElement(n.a,{href:"#system-types","aria-label":"system types permalink",className:"anchor before"},t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"System Types"),"\n",t.createElement(n.p,null,"There are two system types ",t.createElement(n.a,{href:"/docs/api/edge/enums/SystemType.html#Update",title:"View 'SystemType.Update' in Excalibur.js Edge API docs",className:"tsdoc-link tsdoc-link--aliased",target:"_blank"},"update")," and ",t.createElement(n.a,{href:"/docs/api/edge/enums/SystemType.html#Draw",title:"View 'SystemType.Draw' in Excalibur.js Edge API docs",className:"tsdoc-link tsdoc-link--aliased",target:"_blank"},"draw"),"."),"\n",t.createElement(n.p,null,t.createElement(n.a,{href:"/docs/api/edge/enums/SystemType.html#Update",title:"View 'SystemType.Update' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"SystemType.Update")," type systems all run before ",t.createElement(n.a,{href:"/docs/api/edge/enums/SystemType.html#Draw",title:"View 'SystemType.Draw' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"SystemType.Draw")," type systems."),"\n",t.createElement(n.h2,{id:"lifecycle",style:{position:"relative"}},t.createElement(n.a,{href:"#lifecycle","aria-label":"lifecycle permalink",className:"anchor before"},t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Lifecycle"),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,"sort(a: Entity, b: Entity);"),"\n",t.createElement(n.li,null,"update(entities: Entity[], delta: number);"),"\n",t.createElement(n.li,null,"preupdate();"),"\n",t.createElement(n.li,null,"postupdate();"),"\n"),"\n",t.createElement(n.h2,{id:"built-in-systems",style:{position:"relative"}},t.createElement(n.a,{href:"#built-in-systems","aria-label":"built in systems permalink",className:"anchor before"},t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Built in Systems"),"\n",t.createElement(n.p,null,"Excalibur has a few built in systems that are used to enable the default behavior. These ",t.createElement(n.code,null,"Systems")," are defined at Scene constructor time."),"\n",t.createElement(n.h3,{id:"view-motionsystem-in-excaliburjs-edge-api-docs",style:{position:"relative"}},t.createElement(n.a,{href:"#view-motionsystem-in-excaliburjs-edge-api-docs","aria-label":"view motionsystem in excaliburjs edge api docs permalink",className:"anchor before"},t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),t.createElement(n.a,{href:"/docs/api/edge/classes/MotionSystem.html",title:"View 'MotionSystem' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"MotionSystem")),"\n",t.createElement(n.p,null,"The motion system implements motion on entities, like Actors moving with velocity and acceleration."),"\n",t.createElement(n.p,null,"This system makes use of the ",t.createElement(n.a,{href:"/docs/api/edge/classes/TransformComponent.html",title:"View 'TransformComponent' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"TransformComponent")," and ",t.createElement(n.a,{href:"/docs/api/edge/classes/MotionComponent.html",title:"View 'MotionComponent' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"MotionComponent")," to implement motion."),"\n",t.createElement(n.p,null,"If a ",t.createElement(n.a,{href:"/docs/api/edge/classes/BodyComponent.html",title:"View 'BodyComponent' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"BodyComponent")," is present that will be used to apply sleep or global acceleration ",t.createElement(n.a,{href:"/docs/api/edge/classes/Physics.html#acc",title:"View 'Physics.acc' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"Physics.acc")," to all ",t.createElement(n.a,{href:"/docs/api/edge/enums/CollisionType.html#Active",title:"View 'CollisionType.Active' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"CollisionType.Active")," bodies."),"\n",t.createElement(n.h3,{id:"view-collisionsystem-in-excaliburjs-edge-api-docs",style:{position:"relative"}},t.createElement(n.a,{href:"#view-collisionsystem-in-excaliburjs-edge-api-docs","aria-label":"view collisionsystem in excaliburjs edge api docs permalink",className:"anchor before"},t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),t.createElement(n.a,{href:"/docs/api/edge/classes/CollisionSystem.html",title:"View 'CollisionSystem' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"CollisionSystem")),"\n",t.createElement(n.p,null,"The collision system uses the ",t.createElement(n.a,{href:"/docs/api/edge/classes/TransformComponent.html",title:"View 'TransformComponent' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"TransformComponent"),", ",t.createElement(n.a,{href:"/docs/api/edge/classes/MotionComponent.html",title:"View 'MotionComponent' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"MotionComponent"),", and ",t.createElement(n.a,{href:"/docs/api/edge/classes/ColliderComponent.html",title:"View 'ColliderComponent' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"ColliderComponent")," to implement collision detection and resolution behavior."),"\n",t.createElement(n.h3,{id:"view-graphicssystem-in-excaliburjs-edge-api-docs",style:{position:"relative"}},t.createElement(n.a,{href:"#view-graphicssystem-in-excaliburjs-edge-api-docs","aria-label":"view graphicssystem in excaliburjs edge api docs permalink",className:"anchor before"},t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),t.createElement(n.a,{href:"/docs/api/edge/classes/GraphicsSystem.html",title:"View 'GraphicsSystem' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"GraphicsSystem")),"\n",t.createElement(n.p,null,"The Excalibur GraphicsSystem takes any entity with a ",t.createElement(n.a,{href:"/docs/api/edge/classes/TransformComponent.html",title:"View 'TransformComponent' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"TransformComponent")," and a ",t.createElement(n.a,{href:"/docs/api/edge/classes/GraphicsComponent.html",title:"View 'GraphicsComponent' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"GraphicsComponent")," and draws it to the screen using the ",t.createElement(n.a,{href:"/docs/api/edge/interfaces/ExcaliburGraphicsContext.html",title:"View 'ExcaliburGraphicsContext' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"ExcaliburGraphicsContext"),"."),"\n",t.createElement(n.h3,{id:"view-debugsystem-in-excaliburjs-edge-api-docs",style:{position:"relative"}},t.createElement(n.a,{href:"#view-debugsystem-in-excaliburjs-edge-api-docs","aria-label":"view debugsystem in excaliburjs edge api docs permalink",className:"anchor before"},t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),t.createElement(n.a,{href:"/docs/api/edge/classes/DebugSystem.html",title:"View 'DebugSystem' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"DebugSystem")),"\n",t.createElement(n.p,null,"The debug system is slightly odd, it operates on all entities with a ",t.createElement(n.a,{href:"/docs/api/edge/classes/TransformComponent.html",title:"View 'TransformComponent' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"TransformComponent")," to display debug information to the screen when ",t.createElement(n.a,{href:"/docs/api/edge/classes/Engine.html#showDebug",title:"View 'Engine.showDebug' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"Engine.showDebug")," is enabled."),"\n",t.createElement(n.p,null,"Read more about the debug options here ",t.createElement(n.a,{href:"/docs/api/edge/classes/Debug.html",title:"View 'Debug' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"Debug")),"\n",t.createElement(n.h2,{id:"implementing-your-own-components--systems",style:{position:"relative"}},t.createElement(n.a,{href:"#implementing-your-own-components--systems","aria-label":"implementing your own components  systems permalink",className:"anchor before"},t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Implementing your own Components & Systems"),"\n",t.createElement(n.p,null,"To build your own component, extend the Excalibur ",t.createElement(n.a,{href:"/docs/api/edge/classes/Component.html",title:"View 'Component' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"Component")," abstract class and pick a unique type name (duplicate type names will cause problems)."),"\n",t.createElement(n.p,null,"For custom component types it is recommended you prefix your types, like ",t.createElement(n.code,null,"type = 'myCustomPrefixTransform'")),"\n",t.createElement(n.p,null,'In this example, we create a "search" type component, that searches for a target position. Notice how this component implementation is mostly data.'),"\n",t.createElement(n.p,null,t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token keyword">class</span> <span class="token class-name">SearchComponent</span> <span class="token keyword">extends</span> <span class="token class-name">ex</span><span class="token punctuation">.</span>Component<span class="token operator">&lt;</span><span class="token string">\'search\'</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">readonly</span> type <span class="token operator">=</span> <span class="token string">\'search\'</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> target<span class="token operator">:</span> ex<span class="token punctuation">.</span>Vector<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SearchSystem</span> <span class="token keyword">extends</span> <span class="token class-name">ex</span><span class="token punctuation">.</span>System<span class="token operator">&lt;</span>ex<span class="token punctuation">.</span>TransformComponent <span class="token operator">|</span> SearchComponent<span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token comment">// Types need to be listed as a const literal</span>\n    <span class="token keyword">public</span> <span class="token keyword">readonly</span> types <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'ex.transform\'</span><span class="token punctuation">,</span> <span class="token string">\'search\'</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Lower numbers mean higher priority</span>\n    <span class="token comment">// 99 is low priority</span>\n    <span class="token keyword">public</span> priority <span class="token operator">=</span> <span class="token number">99</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// Run this system in the "update" phase</span>\n    <span class="token keyword">public</span> systemType <span class="token operator">=</span> ex<span class="token punctuation">.</span>SystemType<span class="token punctuation">.</span>Update\n\n    <span class="token keyword">private</span> _searchSpeed <span class="token operator">=</span> <span class="token number">100</span> <span class="token comment">// pixels/sec</span>\n\n    <span class="token keyword">public</span> <span class="token function">update</span><span class="token punctuation">(</span>entities<span class="token operator">:</span> ex<span class="token punctuation">.</span>Entity<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> delta<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> entity <span class="token keyword">of</span> entities<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> target <span class="token operator">=</span> entity<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>SearchComponent<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">.</span>target<span class="token punctuation">;</span>\n            <span class="token comment">// ex.TransformComponent is a built in type</span>\n            <span class="token class-name"><span class="token keyword">const</span></span> transform <span class="token operator">=</span> entity<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span>TransformComponent<span class="token punctuation">)</span> <span class="token keyword">as</span> ex<span class="token punctuation">.</span>TransformComponent<span class="token punctuation">;</span>\n\n            <span class="token keyword">const</span> direction <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>transform<span class="token punctuation">.</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">const</span> motion <span class="token operator">=</span> direction<span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_searchSpeed<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token comment">// Moves these entities towards the target at 10 pixels per second</span>\n            transform<span class="token punctuation">.</span>pos <span class="token operator">=</span> transform<span class="token punctuation">.</span>pos<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>motion<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span>delta <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nscene<span class="token punctuation">.</span>world<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// Actors come with batteries included built in features</span>\n<span class="token keyword">const</span> actor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    pos<span class="token operator">:</span> ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n    height<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n    color<span class="token operator">:</span> ex<span class="token punctuation">.</span>Color<span class="token punctuation">.</span>Red\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nactor<span class="token punctuation">.</span><span class="token function">addComponent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SearchComponent</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}})),"\n",t.createElement(s,{src:"https://excaliburjs.com/excalibur-snippets/ecs/"}),"\n",t.createElement(n.p,null,"Any entity that has the new component attached will be processed by the new system once added to the world!"))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?t.createElement(n,e,t.createElement(o,e)):o(e)};var l=s(4854),p=s(2436),i=s(2030),r=s(7306),m=s(2768),u=s(871),d=s(7924),k=s(9813);const h={Link:l.rU,Note:m.Z,Example:u.Z,IFrameEmbed:d.Z,CodeSandboxEmbed:k.Z},y=e=>{let{toc:n,releases:s}=e;return t.createElement("div",{id:"docs-toc",className:"ui fluid vertical docs text menu"},t.createElement("a",{id:"open-toc",className:"ui button docs-open",href:"#open-toc"},t.createElement("i",{className:"hamburger icon"})," ",t.createElement("span",{className:"toc-closed"},"Open")," Table of Contents"),t.createElement("a",{className:"ui button docs-close",href:"#docs-content"},t.createElement("i",{className:"hamburger icon"})," ",t.createElement("span",{className:"toc-opened"},"Close")," Table of Contents"),t.createElement("div",{id:"user-guides",className:"header item"}," Documentation"),(()=>{const e={};for(let s of n)e[s.frontmatter.section]||(e[s.frontmatter.section]=[]),e[s.frontmatter.section].push(s);return Object.keys(e).map((n=>t.createElement(t.Fragment,{key:n},t.createElement("section",null,t.createElement(l.rU,{className:"item active",style:{fontSize:"1.2em"},to:e[n][0].frontmatter.path},n),t.createElement("div",{className:"sub item"},t.createElement("div",{className:"menu"},e[n].map((e=>{let{frontmatter:n}=e;return t.createElement(l.rU,{key:n.path,activeClassName:"active",className:"item",style:{fontSize:"1em"},to:n.path},n.title)}))))))))})(),t.createElement("a",{className:"item",href:"/examples/"}," Examples"),t.createElement("div",{className:"header item"},"API Reference"),t.createElement("a",{className:"item",href:"/docs/api/edge/"}," Edge (latest)"),s.map((e=>t.createElement("a",{key:e.tag.name,className:"item",href:"/docs/api/"+e.tag.name+"/"},e.tag.name))))},g=()=>t.createElement("div",{className:"docs-search"},t.createElement(p.F,{apiKey:"f8e274d9f62a3088bb54ab80f766d740",appId:"IVI5ONIKWP",indexName:"excaliburjs"})),E=e=>{let{data:n}=e;return t.createElement(t.Fragment,null,t.createElement("title",null,n.page.frontmatter.title),t.createElement("link",{rel:"preconnect",href:"https://IVI5ONIKWP-dsn.algolia.net",crossOrigin:"true"}),t.createElement("link",{rel:"stylesheet",href:"https://fonts.googleapis.com/css?family=Libre+Baskerville:400,400i,700"}))};function b(e){let{data:n,children:s}=e;const{page:o,toc:c,github:{data:{repository:{releases:l}}}}=n,{frontmatter:p}=o;return t.createElement(i.Z,null,t.createElement(r.Z),t.createElement("div",{className:"ui page stackable relaxed grid"},t.createElement("div",{className:"four wide column"},t.createElement(g),t.createElement(y,{toc:c.edges.map((e=>e.node)),releases:l.edges.map((e=>e.node))})),t.createElement("div",{className:"twelve wide column"},t.createElement("div",{className:"ui left aligned container"},t.createElement("h1",null,p.title),t.createElement("div",{id:"docs-content",className:"docs-content"},t.createElement(a.Zo,{components:h},s))))))}function f(e){return t.createElement(b,e,t.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-docs-page-template-js-content-file-path-docs-05-3-systems-mdx-df6c8d3076549f23971b.js.map