{"version":3,"file":"component---src-templates-docs-page-template-js-content-file-path-docs-04-1-sprites-mdx-65f2dffe3939d94aa730.js","mappings":"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","sources":["webpack://excaliburjs.github.io/./docs/04.1-sprites.mdx","webpack://excaliburjs.github.io/./src/templates/DocsPageTemplate.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"A sprite is a view into a \", React.createElement(_components.a, {\n    href: \"#ImageSource\"\n  }, \"ImageSource\"), \" and a projection into a final destination size.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">const</span> image <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ex</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">ImageSource</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./img/myimage.png'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">// keep in mind this wont work until the raw image is loaded</span>\\n<span class=\\\"token keyword\\\">const</span> sprite <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ex</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Sprite</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  image<span class=\\\"token operator\\\">:</span> image<span class=\\\"token punctuation\\\">,</span>\\n  sourceView<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// Take a small slice of the source image starting at pixel (10, 10) with dimension 20 pixels x 20 pixels</span>\\n    x<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span>\\n    y<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">,</span>\\n    width<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span>\\n    height<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  destSize<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// Optionally specify a different projected size, otherwise use the source</span>\\n    width<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">,</span>\\n    height<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Many times a sprite is the exact same view and size as the source \", React.createElement(_components.a, {\n    href: \"#ImageSource\"\n  }, \"raw image\"), \" so there is a quick static helper to do this\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">const</span> image <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ex</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">ImageSource</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./img/myimage.png'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">// keep in mind this wont work until the image source is loaded</span>\\n<span class=\\\"token keyword\\\">const</span> sprite <span class=\\\"token operator\\\">=</span> image<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toSprite</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/excaliburjs.github.io/excaliburjs.github.io/docs/04.1-sprites.mdx\";\nimport React from 'react';\nimport {graphql, Link} from 'gatsby';\nimport {MDXProvider} from '@mdx-js/react';\nimport {DocSearch} from '@docsearch/react';\nimport Layout from '../components/layout';\nimport Header from '../components/header';\nimport Note from '../components/docs/Note';\nimport Example from '../components/docs/Example';\nimport IFrameEmbed from '../components/docs/IFrameEmbed';\nimport CodeSandboxEmbed from '../components/docs/CodeSandboxEmbed';\nconst shortcodes = {\n  Link,\n  Note,\n  Example,\n  IFrameEmbed,\n  CodeSandboxEmbed\n};\nconst Toc = ({toc: pages, releases}) => React.createElement(\"div\", {\n  id: \"docs-toc\",\n  className: \"ui fluid vertical docs text menu\"\n}, React.createElement(\"a\", {\n  id: \"open-toc\",\n  className: \"ui button docs-open\",\n  href: \"#open-toc\"\n}, React.createElement(\"i\", {\n  className: \"hamburger icon\"\n}), ' ', React.createElement(\"span\", {\n  className: \"toc-closed\"\n}, \"Open\"), \" Table of Contents\"), React.createElement(\"a\", {\n  className: \"ui button docs-close\",\n  href: \"#docs-content\"\n}, React.createElement(\"i\", {\n  className: \"hamburger icon\"\n}), ' ', React.createElement(\"span\", {\n  className: \"toc-opened\"\n}, \"Close\"), \" Table of Contents\"), React.createElement(\"div\", {\n  id: \"user-guides\",\n  className: \"header item\"\n}, \" Documentation\"), (() => {\n  const sections = {};\n  for (let page of pages) {\n    if (!sections[page.frontmatter.section]) {\n      sections[page.frontmatter.section] = [];\n    }\n    sections[page.frontmatter.section].push(page);\n  }\n  return Object.keys(sections).map(section => React.createElement(React.Fragment, {\n    key: section\n  }, React.createElement(\"section\", null, React.createElement(Link, {\n    className: \"item active\",\n    style: {\n      fontSize: 1.2 + 'em'\n    },\n    to: sections[section][0].frontmatter.path\n  }, section), React.createElement(\"div\", {\n    className: \"sub item\"\n  }, React.createElement(\"div\", {\n    className: \"menu\"\n  }, sections[section].map(({frontmatter}) => React.createElement(Link, {\n    key: frontmatter.path,\n    activeClassName: \"active\",\n    className: \"item\",\n    style: {\n      fontSize: 1.0 + 'em'\n    },\n    to: frontmatter.path\n  }, frontmatter.title)))))));\n})(), React.createElement(\"a\", {\n  className: \"item\",\n  href: \"/examples/\"\n}, \" Examples\"), React.createElement(\"div\", {\n  className: \"header item\"\n}, \"API Reference\"), React.createElement(\"a\", {\n  className: \"item\",\n  href: \"/docs/api/edge/\"\n}, \" Edge (latest)\"), releases.map(release => React.createElement(\"a\", {\n  key: release.tag.name,\n  className: \"item\",\n  href: `/docs/api/${release.tag.name}/`\n}, release.tag.name)));\nconst Search = () => React.createElement(\"div\", {\n  className: \"docs-search\"\n}, React.createElement(DocSearch, {\n  apiKey: \"f8e274d9f62a3088bb54ab80f766d740\",\n  appId: \"IVI5ONIKWP\",\n  indexName: \"excaliburjs\"\n}));\nexport const Head = ({data}) => React.createElement(React.Fragment, null, React.createElement(\"title\", null, data.page.frontmatter.title), React.createElement(\"link\", {\n  rel: \"preconnect\",\n  href: \"https://IVI5ONIKWP-dsn.algolia.net\",\n  crossOrigin: \"true\"\n}), React.createElement(\"link\", {\n  rel: \"stylesheet\",\n  href: \"https://fonts.googleapis.com/css?family=Libre+Baskerville:400,400i,700\"\n}));\nfunction Template({data, children}) {\n  const {page, toc, github: {data: {repository: {releases}}}} = data;\n  const {frontmatter} = page;\n  return React.createElement(Layout, null, React.createElement(Header), React.createElement(\"div\", {\n    className: \"ui page stackable relaxed grid\"\n  }, React.createElement(\"div\", {\n    className: \"four wide column\"\n  }, React.createElement(Search), React.createElement(Toc, {\n    toc: toc.edges.map(e => e.node),\n    releases: releases.edges.map(r => r.node)\n  })), React.createElement(\"div\", {\n    className: \"twelve wide column\"\n  }, React.createElement(\"div\", {\n    className: \"ui left aligned container\"\n  }, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    id: \"docs-content\",\n    className: \"docs-content\"\n  }, React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children))))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Template, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query DocsByPath($id: String!) {\n    github: githubData {\n      data {\n        repository {\n          releases {\n            edges {\n              node {\n                publishedAt\n                name\n                tag {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    toc: allMdx(sort: { internal: { contentFilePath: ASC } }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            path\n            section\n          }\n        }\n      }\n    }\n\n    page: mdx(id: { eq: $id }) {\n      body\n      frontmatter {\n        path\n        title\n        section\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","span","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","shortcodes","Link","Note","Example","IFrameEmbed","CodeSandboxEmbed","Toc","_ref","toc","pages","releases","id","className","sections","page","frontmatter","section","push","keys","map","key","style","fontSize","to","path","_ref2","activeClassName","title","release","tag","name","Search","DocSearch","apiKey","appId","indexName","Head","_ref3","data","rel","crossOrigin","Template","children","github","repository","Layout","Header","edges","e","node","r","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}