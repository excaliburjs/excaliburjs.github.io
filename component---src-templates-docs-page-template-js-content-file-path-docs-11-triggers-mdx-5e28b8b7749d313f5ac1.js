"use strict";(self.webpackChunkexcaliburjs_github_io=self.webpackChunkexcaliburjs_github_io||[]).push([[9132],{9284:function(n,a,s){s.r(a),s.d(a,{Head:function(){return y},default:function(){return E}});var e=s(1151),t=s(7294);function p(n){const a=Object.assign({p:"p",a:"a",h2:"h2",span:"span",strong:"strong",code:"code"},(0,e.ah)(),n.components);return t.createElement(t.Fragment,null,t.createElement(a.p,null,t.createElement(a.a,{href:"/docs/api/edge/classes/Trigger.html",title:"View 'Trigger' in Excalibur.js Edge API docs",className:"tsdoc-link tsdoc-link--aliased",target:"_blank"},"Triggers")," can be used to fire logic when an ",t.createElement(a.a,{href:"/docs/api/edge/classes/Actor.html",title:"View 'Actor' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"Actor")," intersects with a ",t.createElement(a.a,{href:"/docs/api/edge/classes/Collider.html",title:"View 'Collider' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"Collider"),", this is useful for in game switches, doors, or other in game sensors."),"\n",t.createElement(a.p,null,"Under the hood, triggers are just ",t.createElement(a.a,{href:"/docs/api/edge/classes/Actor.html",title:"View 'Actor' in Excalibur.js Edge API docs",className:"tsdoc-link tsdoc-link--aliased",target:"_blank"},"Actors")," that have sugar to help wire up and fire logic on collision start or end events."),"\n",t.createElement(a.h2,{id:"trigger",style:{position:"relative"}},t.createElement(a.a,{href:"#trigger","aria-label":"trigger permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Trigger"),"\n",t.createElement(a.p,null,"By default triggers will fire when ",t.createElement(a.strong,null,"any")," geometry in your game intersects with the trigger area. Triggers are also ",t.createElement(a.strong,null,"not visible")," by default, generally you will layer triggers on top of your scene. They can be given a finite amount of repeat triggers with the ",t.createElement(a.code,null,"repeat"),", a value of ",t.createElement(a.code,null,"-1")," means repeat forever."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="typescript"><pre class="language-typescript"><code class="language-typescript"><span class="token comment">// Example trigger will fire on any geometry</span>\n<span class="token keyword">const</span> trigger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Trigger</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n  height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n  pos<span class="token operator">:</span> ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  repeat<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'triggered\'</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"However this might not be desired all the time, you may have a specific ",t.createElement(a.a,{href:"/docs/api/edge/classes/Actor.html",title:"View 'Actor' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"Actor"),", such as a player, that you want to trigger on. Using a ",t.createElement(a.code,null,"target")," will override any ",t.createElement(a.code,null,"filter"),"'s provided."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="typescript"><pre class="language-typescript"><code class="language-typescript"><span class="token keyword">const</span> player <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// Example trigger will fire on any geometry</span>\n<span class="token keyword">const</span> trigger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Trigger</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n  height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n  pos<span class="token operator">:</span> ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  target<span class="token operator">:</span> player<span class="token punctuation">,</span> <span class="token comment">// only trigger logic on player</span>\n  <span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'triggered\'</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.h2,{id:"filtering-triggers",style:{position:"relative"}},t.createElement(a.a,{href:"#filtering-triggers","aria-label":"filtering triggers permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Filtering Triggers"),"\n",t.createElement(a.p,null,"Sometimes your trigger logic needs to be more complicated than just a target, this can be accomplished with a ",t.createElement(a.code,null,"filter")," function. Returning a ",t.createElement(a.code,null,"true"),"thy value out of the function will allow the trigger to fire."),"\n",t.createElement(a.p,null,'This need not be just logic on actors, you can use this for more complex game logic like "Only allow the trigger if there is a key in the inventory"'),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="typescript"><pre class="language-typescript"><code class="language-typescript"><span class="token keyword">const</span> player <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// Example trigger will fire on any geometry</span>\n<span class="token keyword">const</span> trigger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Trigger</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n  height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n  pos<span class="token operator">:</span> ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">filter</span><span class="token operator">:</span> <span class="token punctuation">(</span>actor<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>actor<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">\'player\'</span> <span class="token operator">&amp;&amp;</span> keyInInventory <span class="token operator">&amp;&amp;</span> isLevel42<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'triggered\'</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"Additionally it is also possible to use ",t.createElement(a.a,{href:"/docs/collision-groups"},"collision groups")," to filter collisions between triggers and other actors because triggers are also actors."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="typescript"><pre class="language-typescript"><code class="language-typescript"><span class="token keyword">const</span> PlayerGroup <span class="token operator">=</span> ex<span class="token punctuation">.</span>CollisionGroupManager<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">\'player\'</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> player <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">\'player\'</span><span class="token punctuation">,</span>\n  pos<span class="token operator">:</span> ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  width<span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>\n  height<span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>\n  collisionType<span class="token operator">:</span> ex<span class="token punctuation">.</span>CollisionType<span class="token punctuation">.</span>Active<span class="token punctuation">,</span>\n  collisionGroup<span class="token operator">:</span> PlayerGroup<span class="token punctuation">,</span>\n  color<span class="token operator">:</span> ex<span class="token punctuation">.</span>Color<span class="token punctuation">.</span>Red<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nplayer<span class="token punctuation">.</span>vel<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">10</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> trigger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Trigger</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  width<span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>\n  height<span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>\n  pos<span class="token operator">:</span> ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  repeat<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>\n  <span class="token function-variable function">action</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'triggered\'</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\ntrigger<span class="token punctuation">.</span>body<span class="token punctuation">.</span>group <span class="token operator">=</span> ex<span class="token punctuation">.</span>CollisionGroup<span class="token punctuation">.</span><span class="token function">collidesWith</span><span class="token punctuation">(</span><span class="token punctuation">[</span>PlayerGroup<span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre></div>'}}))}var o=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,e.ah)(),n.components);return a?t.createElement(a,n,t.createElement(p,n)):p(n)},c=s(4160),l=s(2640),r=s(2030),i=s(7306),u=s(2768),k=s(871),m=s(7924),g=s(9813);const d={Link:c.rU,Note:u.Z,Example:k.Z,IFrameEmbed:m.Z,CodeSandboxEmbed:g.Z},h=n=>{let{toc:a,releases:s}=n;return t.createElement("div",{id:"docs-toc",className:"ui fluid vertical docs text menu"},t.createElement("a",{id:"open-toc",className:"ui button docs-open",href:"#open-toc"},t.createElement("i",{className:"hamburger icon"})," ",t.createElement("span",{className:"toc-closed"},"Open")," Table of Contents"),t.createElement("a",{className:"ui button docs-close",href:"#docs-content"},t.createElement("i",{className:"hamburger icon"})," ",t.createElement("span",{className:"toc-opened"},"Close")," Table of Contents"),t.createElement("div",{id:"user-guides",className:"header item"},"Documentation"),(()=>{const n={};for(let s of a)n[s.frontmatter.section]||(n[s.frontmatter.section]=[]),n[s.frontmatter.section].push(s);return Object.keys(n).map((a=>t.createElement(t.Fragment,{key:a},t.createElement("section",null,t.createElement(c.rU,{className:"item active",style:{fontSize:"1.2em"},to:n[a][0].frontmatter.path},a),t.createElement("div",{className:"sub item"},t.createElement("div",{className:"menu"},n[a].map((n=>{let{frontmatter:a}=n;return t.createElement(c.rU,{key:a.path,activeClassName:"active",className:"item",style:{fontSize:"1em"},to:a.path},a.title)}))))))))})(),t.createElement("a",{className:"item",href:"/examples/"},"Examples"),t.createElement("div",{className:"header item"},"API Reference"),t.createElement("a",{className:"item",href:"/docs/api/edge/"},"Edge (latest)"),s.map((n=>t.createElement("a",{key:n.tag.name,className:"item",href:"/docs/api/"+n.tag.name+"/"},n.tag.name))))},f=()=>t.createElement("div",{className:"docs-search"},t.createElement(l.F,{apiKey:"f8e274d9f62a3088bb54ab80f766d740",appId:"IVI5ONIKWP",indexName:"excaliburjs"})),y=n=>{let{data:a}=n;return t.createElement(t.Fragment,null,t.createElement("title",null,a.page.frontmatter.title),t.createElement("link",{rel:"preconnect",href:"https://IVI5ONIKWP-dsn.algolia.net",crossOrigin:"true"}),t.createElement("link",{rel:"stylesheet",href:"https://fonts.googleapis.com/css?family=Libre+Baskerville:400,400i,700"}))};function b(n){let{data:a,children:s}=n;const{page:p,toc:o,github:{data:{repository:{releases:c}}}}=a,{frontmatter:l}=p;return t.createElement(r.Z,null,t.createElement(i.Z),t.createElement("div",{className:"ui page stackable relaxed grid"},t.createElement("div",{className:"four wide column"},t.createElement(f),t.createElement(h,{toc:o.edges.map((n=>n.node)),releases:c.edges.map((n=>n.node))})),t.createElement("div",{className:"twelve wide column"},t.createElement("div",{className:"ui left aligned container"},t.createElement("h1",null,l.title),t.createElement("div",{id:"docs-content",className:"docs-content"},t.createElement(e.Zo,{components:d},s))))))}function E(n){return t.createElement(b,n,t.createElement(o,n))}}}]);
//# sourceMappingURL=component---src-templates-docs-page-template-js-content-file-path-docs-11-triggers-mdx-5e28b8b7749d313f5ac1.js.map