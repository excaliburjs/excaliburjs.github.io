"use strict";(self.webpackChunkexcaliburjs_github_io=self.webpackChunkexcaliburjs_github_io||[]).push([[4325],{2434:function(n,a,s){s.r(a),s.d(a,{Head:function(){return y},default:function(){return b}});var e=s(1151),t=s(7294);function o(n){const a=Object.assign({p:"p",span:"span"},(0,e.ah)(),n.components);return t.createElement(t.Fragment,null,t.createElement(a.p,null,"Collision groups are useful when you want to filter the collision that are possible between colliders\non a granular level above and beyond collision type. This idea is also known as collision layers, collision filters, or collision filtering."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="typescript"><pre class="language-typescript"><code class="language-typescript"><span class="token comment">// Create a group for each distinct category of "collidable" in your game</span>\n<span class="token keyword">const</span> playerGroup <span class="token operator">=</span> ex<span class="token punctuation">.</span>CollisionGroupManager<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">\'player\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> npcGroup <span class="token operator">=</span> ex<span class="token punctuation">.</span>CollisionGroupManager<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">\'npcGroup\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> floorGroup <span class="token operator">=</span> ex<span class="token punctuation">.</span>CollisionGroupManager<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">\'floorGroup\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> enemyGroup <span class="token operator">=</span> ex<span class="token punctuation">.</span>CollisionGroupManager<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">\'enemyGroup\'</span><span class="token punctuation">)</span>\n\n<span class="token comment">// Define your rules</span>\n<span class="token keyword">const</span> playersCanCollideWith <span class="token operator">=</span> ex<span class="token punctuation">.</span>CollisionGroup<span class="token punctuation">.</span><span class="token function">collidesWith</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  playersGroup<span class="token punctuation">,</span> <span class="token comment">// collide with other players</span>\n  floorGroup<span class="token punctuation">,</span> <span class="token comment">// collide with the floor</span>\n  enemyGroup<span class="token punctuation">,</span> <span class="token comment">// collide with enemies</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> enemiesCanCollideWith <span class="token operator">=</span> ex<span class="token punctuation">.</span>CollisionGroup<span class="token punctuation">.</span><span class="token function">collidesWith</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  playerGroup<span class="token punctuation">,</span> <span class="token comment">// collide with players</span>\n  floorGroup<span class="token punctuation">,</span> <span class="token comment">// collide with the floor</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> npcGroupCanCollideWith <span class="token operator">=</span> ex<span class="token punctuation">.</span>CollisionGroup<span class="token punctuation">.</span><span class="token function">collidesWith</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  floorGroup<span class="token punctuation">,</span> <span class="token comment">// only collides with the floor</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> player <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  collisionGroup<span class="token operator">:</span> playersCanCollideWith<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> npc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  collisionGroup<span class="token operator">:</span> npcGroupCanCollideWith<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> enemy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  collisionGroup<span class="token operator">:</span> enemiesCanCollideWith<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> floor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  pos<span class="token operator">:</span> ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n  height<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n  collisionGroup<span class="token operator">:</span> floorGroup<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></div>'}}))}var p=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,e.ah)(),n.components);return a?t.createElement(a,n,t.createElement(o,n)):o(n)},c=s(4854),l=s(2436),r=s(2030),i=s(7306),u=s(2768),k=s(871),m=s(7924),d=s(9813);const f={Link:c.rU,Note:u.Z,Example:k.Z,IFrameEmbed:m.Z,CodeSandboxEmbed:d.Z},h=n=>{let{toc:a,releases:s}=n;return t.createElement("div",{id:"docs-toc",className:"ui fluid vertical docs text menu"},t.createElement("a",{id:"open-toc",className:"ui button docs-open",href:"#open-toc"},t.createElement("i",{className:"hamburger icon"})," ",t.createElement("span",{className:"toc-closed"},"Open")," Table of Contents"),t.createElement("a",{className:"ui button docs-close",href:"#docs-content"},t.createElement("i",{className:"hamburger icon"})," ",t.createElement("span",{className:"toc-opened"},"Close")," Table of Contents"),t.createElement("div",{id:"user-guides",className:"header item"}," Documentation"),(()=>{const n={};for(let s of a)n[s.frontmatter.section]||(n[s.frontmatter.section]=[]),n[s.frontmatter.section].push(s);return Object.keys(n).map((a=>t.createElement(t.Fragment,{key:a},t.createElement("section",null,t.createElement(c.rU,{className:"item active",style:{fontSize:"1.2em"},to:n[a][0].frontmatter.path},a),t.createElement("div",{className:"sub item"},t.createElement("div",{className:"menu"},n[a].map((n=>{let{frontmatter:a}=n;return t.createElement(c.rU,{key:a.path,activeClassName:"active",className:"item",style:{fontSize:"1em"},to:a.path},a.title)}))))))))})(),t.createElement("a",{className:"item",href:"/examples/"}," Examples"),t.createElement("div",{className:"header item"},"API Reference"),t.createElement("a",{className:"item",href:"/docs/api/edge/"}," Edge (latest)"),s.map((n=>t.createElement("a",{key:n.tag.name,className:"item",href:"/docs/api/"+n.tag.name+"/"},n.tag.name))))},g=()=>t.createElement("div",{className:"docs-search"},t.createElement(l.F,{apiKey:"f8e274d9f62a3088bb54ab80f766d740",appId:"IVI5ONIKWP",indexName:"excaliburjs"})),y=n=>{let{data:a}=n;return t.createElement(t.Fragment,null,t.createElement("title",null,a.page.frontmatter.title),t.createElement("link",{rel:"preconnect",href:"https://IVI5ONIKWP-dsn.algolia.net",crossOrigin:"true"}),t.createElement("link",{rel:"stylesheet",href:"https://fonts.googleapis.com/css?family=Libre+Baskerville:400,400i,700"}))};function E(n){let{data:a,children:s}=n;const{page:o,toc:p,github:{data:{repository:{releases:c}}}}=a,{frontmatter:l}=o;return t.createElement(r.Z,null,t.createElement(i.Z),t.createElement("div",{className:"ui page stackable relaxed grid"},t.createElement("div",{className:"four wide column"},t.createElement(g),t.createElement(h,{toc:p.edges.map((n=>n.node)),releases:c.edges.map((n=>n.node))})),t.createElement("div",{className:"twelve wide column"},t.createElement("div",{className:"ui left aligned container"},t.createElement("h1",null,l.title),t.createElement("div",{id:"docs-content",className:"docs-content"},t.createElement(e.Zo,{components:f},s))))))}function b(n){return t.createElement(E,n,t.createElement(p,n))}}}]);
//# sourceMappingURL=component---src-templates-docs-page-template-js-content-file-path-docs-08-collision-groups-mdx-55550b3bf4adf81f1c1f.js.map