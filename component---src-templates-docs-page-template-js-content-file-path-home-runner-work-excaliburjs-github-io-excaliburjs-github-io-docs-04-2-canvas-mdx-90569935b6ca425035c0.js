"use strict";(self.webpackChunkexcaliburjs_github_io=self.webpackChunkexcaliburjs_github_io||[]).push([[884],{524:function(e,n,a){a.r(n),a.d(n,{Head:function(){return b},default:function(){return y}});var t=a(1151),s=a(7294);function c(e){const n=Object.assign({p:"p",code:"code",a:"a",span:"span",h2:"h2"},(0,t.ah)(),e.components),{Note:a,IFrameEmbed:c}=n;return c||p("IFrameEmbed",!0),a||p("Note",!0),s.createElement(s.Fragment,null,s.createElement(n.p,null,"For drawing hooks the ",s.createElement(n.code,null,"ExcaliburGraphicsContext")," replaces the browser ",s.createElement(n.code,null,"CanvasRenderingContext2D"),". However, if you need to do some custom drawing using the ",s.createElement(n.code,null,"CanvasRenderingContext2D")," the new ",s.createElement(n.a,{href:"/docs/api/edge/classes/Canvas.html",title:"View 'Canvas' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"Canvas")," graphic has your back."),"\n",s.createElement(n.p,null,"The canvas is a special type of graphic that acts like a shim between direct CanvasRenderingContext2D drawing and the ",s.createElement(n.a,{href:"#ExcaliburGraphicsContext"},"ExcaliburGraphicsContext"),"."),"\n",s.createElement(n.p,null,"This type of graphic is re-rendered every time the graphic is drawn, thus it should be used sparingly due to this inefficiency. It is recommended you use the ",s.createElement(n.code,null,"cache: true")," property and call ",s.createElement(n.code,null,"flagDirty()")," when there is something new to draw."),"\n",s.createElement(a,{variant:"warning"},s.createElement(n.p,null,"It is recommended you specify your ex.Canvas width and height in the constructor."),s.createElement(n.p,null,"Keep in mind that the underlying HTML canvas has a default size depending on your platform, this will be used for centering.")),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="typescript"><pre class="language-typescript"><code class="language-typescript"><span class="token keyword">const</span> canvas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Canvas</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">draw</span><span class="token operator">:</span> <span class="token punctuation">(</span>ctx<span class="token operator">:</span> CanvasRenderingContext2D<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.h2,{id:"example",style:{position:"relative"}},s.createElement(n.a,{href:"#example","aria-label":"example permalink",className:"anchor before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Example"),"\n",s.createElement(n.p,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token keyword">const</span> canvas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Canvas</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    width<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n    height<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n    cache<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">// If true draw once until flagged dirty again, otherwise draw to Canvas every frame</span>\n    <span class="token function-variable function">draw</span><span class="token operator">:</span> <span class="token punctuation">(</span>ctx<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'With cache=true I draw once\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">\'red\'</span><span class="token punctuation">;</span>\n        ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> actor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    pos<span class="token operator">:</span> game<span class="token punctuation">.</span>screen<span class="token punctuation">.</span>center\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nactor<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}})),"\n",s.createElement(c,{src:"https://excaliburjs.com/excalibur-snippets/canvas/"}))}var o=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?s.createElement(n,e,s.createElement(c,e)):c(e)};function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}var l=a(4854),r=a(2436),i=a(2030),u=a(7306),m=a(2768),d=a(871),k=a(7924),h=a(9813);const g={Link:l.rU,Note:m.Z,Example:d.Z,IFrameEmbed:k.Z,CodeSandboxEmbed:h.Z},E=e=>{let{toc:n,releases:a}=e;return s.createElement("div",{id:"docs-toc",className:"ui fluid vertical docs text menu"},s.createElement("a",{id:"open-toc",className:"ui button docs-open",href:"#open-toc"},s.createElement("i",{className:"hamburger icon"})," ",s.createElement("span",{className:"toc-closed"},"Open")," Table of Contents"),s.createElement("a",{className:"ui button docs-close",href:"#docs-content"},s.createElement("i",{className:"hamburger icon"})," ",s.createElement("span",{className:"toc-opened"},"Close")," Table of Contents"),s.createElement("div",{id:"user-guides",className:"header item"}," Documentation"),(()=>{const e={};for(let a of n)e[a.frontmatter.section]||(e[a.frontmatter.section]=[]),e[a.frontmatter.section].push(a);return Object.keys(e).map((n=>s.createElement(s.Fragment,{key:n},s.createElement("section",null,s.createElement(l.rU,{className:"item active",style:{fontSize:"1.2em"},to:e[n][0].frontmatter.path},n),s.createElement("div",{className:"sub item"},s.createElement("div",{className:"menu"},e[n].map((e=>{let{frontmatter:n}=e;return s.createElement(l.rU,{key:n.path,activeClassName:"active",className:"item",style:{fontSize:"1em"},to:n.path},n.title)}))))))))})(),s.createElement("a",{className:"item",href:"/examples/"}," Examples"),s.createElement("div",{className:"header item"},"API Reference"),s.createElement("a",{className:"item",href:"/docs/api/edge/"}," Edge (latest)"),a.map((e=>s.createElement("a",{key:e.tag.name,className:"item",href:"/docs/api/"+e.tag.name+"/"},e.tag.name))))},f=()=>s.createElement("div",{className:"docs-search"},s.createElement(r.F,{apiKey:"f8e274d9f62a3088bb54ab80f766d740",appId:"IVI5ONIKWP",indexName:"excaliburjs"})),b=e=>{let{data:n}=e;return s.createElement(s.Fragment,null,s.createElement("title",null,n.page.frontmatter.title),s.createElement("link",{rel:"preconnect",href:"https://IVI5ONIKWP-dsn.algolia.net",crossOrigin:"true"}),s.createElement("link",{rel:"stylesheet",href:"https://fonts.googleapis.com/css?family=Libre+Baskerville:400,400i,700"}))};function v(e){let{data:n,children:a}=e;const{page:c,toc:o,github:{data:{repository:{releases:p}}}}=n,{frontmatter:l}=c;return s.createElement(i.Z,null,s.createElement(u.Z),s.createElement("div",{className:"ui page stackable relaxed grid"},s.createElement("div",{className:"four wide column"},s.createElement(f),s.createElement(E,{toc:o.edges.map((e=>e.node)),releases:p.edges.map((e=>e.node))})),s.createElement("div",{className:"twelve wide column"},s.createElement("div",{className:"ui left aligned container"},s.createElement("h1",null,l.title),s.createElement("div",{id:"docs-content",className:"docs-content"},s.createElement(t.Zo,{components:g},a))))))}function y(e){return s.createElement(v,e,s.createElement(o,e))}}}]);
//# sourceMappingURL=component---src-templates-docs-page-template-js-content-file-path-home-runner-work-excaliburjs-github-io-excaliburjs-github-io-docs-04-2-canvas-mdx-90569935b6ca425035c0.js.map