"use strict";(self.webpackChunkexcaliburjs_github_io=self.webpackChunkexcaliburjs_github_io||[]).push([[815],{4484:function(n,s,a){a.r(s),a.d(s,{Head:function(){return f},default:function(){return E}});var t=a(1151),e=a(7294);function p(n){const s=Object.assign({p:"p",ul:"ul",li:"li",h2:"h2",a:"a",span:"span",code:"code",h3:"h3",ol:"ol"},(0,t.ah)(),n.components),{IFrameEmbed:a}=s;return a||function(n,s){throw new Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("IFrameEmbed",!0),e.createElement(e.Fragment,null,e.createElement(s.p,null,"Excalibur comes built in with two physics simulations."),"\n",e.createElement(s.ul,null,"\n",e.createElement(s.li,null,'"Arcade" style physics which is good for basic collision detection for non-rotated rectangular areas.',"\n",e.createElement(s.ul,null,"\n",e.createElement(s.li,null,"Example: platformers, tile based games, top down, etc"),"\n"),"\n"),"\n",e.createElement(s.li,null,'"Realistic" style physics which is good for rigid body games where realistic collisions are desired',"\n",e.createElement(s.ul,null,"\n",e.createElement(s.li,null,"Example: block stacking, angry bird's style games, etc"),"\n"),"\n"),"\n"),"\n",e.createElement(s.h2,{id:"arcade",style:{position:"relative"}},e.createElement(s.a,{href:"#arcade","aria-label":"arcade permalink",className:"anchor before"},e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Arcade"),"\n",e.createElement(s.p,null,"Arcade physics simulation is on by default, but can be enabled explicitly at any time with ",e.createElement(s.code,null,"ex.Physics.useArcadePhysics()")),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="typescript"><pre class="language-typescript"><code class="language-typescript">Physics<span class="token punctuation">.</span><span class="token function">useArcadePhysics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> game <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Engine</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",e.createElement(s.h2,{id:"realistic",style:{position:"relative"}},e.createElement(s.a,{href:"#realistic","aria-label":"realistic permalink",className:"anchor before"},e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Realistic"),"\n",e.createElement(s.p,null,"Realistic physics are not on by default, but can be enabled explicitly at any time with ",e.createElement(s.code,null,"ex.Physics.useRealisticPhysics()")),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="typescript"><pre class="language-typescript"><code class="language-typescript">Physics<span class="token punctuation">.</span><span class="token function">useRealisticPhysics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> game <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Engine</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",e.createElement(s.h3,{id:"example",style:{position:"relative"}},e.createElement(s.a,{href:"#example","aria-label":"example permalink",className:"anchor before"},e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Example"),"\n",e.createElement(s.p,null,e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts">ex<span class="token punctuation">.</span>Physics<span class="token punctuation">.</span><span class="token function">useRealisticPhysics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nex<span class="token punctuation">.</span>Physics<span class="token punctuation">.</span>acc <span class="token operator">=</span> ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> game <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Engine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    width<span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>\n    height<span class="token operator">:</span> <span class="token number">400</span><span class="token punctuation">,</span>\n    displayMode<span class="token operator">:</span> ex<span class="token punctuation">.</span>DisplayMode<span class="token punctuation">.</span>FitScreen\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> box <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    pos<span class="token operator">:</span> ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span>game<span class="token punctuation">.</span>halfDrawWidth<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n    height<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n    rotation<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    color<span class="token operator">:</span> ex<span class="token punctuation">.</span>Color<span class="token punctuation">.</span>Red<span class="token punctuation">,</span>\n    collisionType<span class="token operator">:</span> ex<span class="token punctuation">.</span>CollisionType<span class="token punctuation">.</span>Active\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> trianglePoints <span class="token operator">=</span> <span class="token punctuation">[</span>ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> triangle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    pos<span class="token operator">:</span> ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span>game<span class="token punctuation">.</span>halfDrawWidth<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    rotation<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    collider<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">PolygonCollider</span><span class="token punctuation">(</span><span class="token punctuation">{</span>points<span class="token operator">:</span> trianglePoints<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    collisionType<span class="token operator">:</span> ex<span class="token punctuation">.</span>CollisionType<span class="token punctuation">.</span>Active\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> triangleGraphic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Polygon</span><span class="token punctuation">(</span><span class="token punctuation">{</span>points<span class="token operator">:</span> trianglePoints<span class="token punctuation">,</span> color<span class="token operator">:</span> ex<span class="token punctuation">.</span>Color<span class="token punctuation">.</span>Green<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ntriangle<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>triangleGraphic<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    pos<span class="token operator">:</span> ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span>game<span class="token punctuation">.</span>halfDrawWidth <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    radius<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>\n    color<span class="token operator">:</span> ex<span class="token punctuation">.</span>Color<span class="token punctuation">.</span>Yellow<span class="token punctuation">,</span>\n    collisionType<span class="token operator">:</span> ex<span class="token punctuation">.</span>CollisionType<span class="token punctuation">.</span>Active\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> ground <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    pos<span class="token operator">:</span> ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span>game<span class="token punctuation">.</span>halfDrawWidth<span class="token punctuation">,</span> game<span class="token punctuation">.</span>drawHeight<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    width<span class="token operator">:</span> game<span class="token punctuation">.</span>drawWidth<span class="token punctuation">,</span>\n    height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    color<span class="token operator">:</span> ex<span class="token punctuation">.</span>Color<span class="token punctuation">.</span>DarkGray<span class="token punctuation">,</span>\n    collisionType<span class="token operator">:</span> ex<span class="token punctuation">.</span>CollisionType<span class="token punctuation">.</span>Fixed\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// start-snippet{collision}</span>\ngame<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    game<span class="token punctuation">.</span>currentScene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>box<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    game<span class="token punctuation">.</span>currentScene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    game<span class="token punctuation">.</span>currentScene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>triangle<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    game<span class="token punctuation">.</span>currentScene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ground<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    game<span class="token punctuation">.</span>currentScene<span class="token punctuation">.</span>camera<span class="token punctuation">.</span>pos <span class="token operator">=</span> ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span>game<span class="token punctuation">.</span>halfDrawWidth<span class="token punctuation">,</span> game<span class="token punctuation">.</span>halfDrawHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}})),"\n",e.createElement(a,{src:"https://excaliburjs.com/excalibur-snippets/collision/"}),"\n",e.createElement(s.h2,{id:"other-physics-settings",style:{position:"relative"}},e.createElement(s.a,{href:"#other-physics-settings","aria-label":"other physics settings permalink",className:"anchor before"},e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Other Physics Settings"),"\n",e.createElement(s.p,null,"See ",e.createElement(s.a,{href:"/docs/api/edge/classes/Physics.html",title:"View 'Physics' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"Physics")," documentation for more"),"\n",e.createElement(s.ul,null,"\n",e.createElement(s.li,null,"Turn off excalibur physics ",e.createElement(s.code,null,"ex.Physics.enabled = false")),"\n",e.createElement(s.li,null,"Global acceleration applied to ",e.createElement(s.a,{href:"/docs/api/edge/enums/CollisionType.html#Active",title:"View 'CollisionType.Active' in Excalibur.js Edge API docs",className:"tsdoc-link tsdoc-link--aliased",target:"_blank"},"active objects")," ",e.createElement(s.code,null,"ex.Physics.acc = ex.vec(0, 100)")),"\n",e.createElement(s.li,null,"Fast moving object detection (continuous collision) ",e.createElement(s.code,null,"ex.Physics.checkForFastBodies = true")),"\n",e.createElement(s.li,null,"Physics realistic passes, more passes mean higher quality simulation at the expense of cpu","\n",e.createElement(s.ul,null,"\n",e.createElement(s.li,null,"Realistic solver position iterations, improves overlap resolution ",e.createElement(s.code,null,"ex.Physics.positionIterations = 3")),"\n",e.createElement(s.li,null,"Realistic solver velocity iterations, improves response and stability ",e.createElement(s.code,null,"ex.Physics.velocityIterations = 8")),"\n"),"\n"),"\n"),"\n",e.createElement(s.h2,{id:"using-physics-with-actors-or-entities",style:{position:"relative"}},e.createElement(s.a,{href:"#using-physics-with-actors-or-entities","aria-label":"using physics with actors or entities permalink",className:"anchor before"},e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Using Physics with Actors or Entities"),"\n",e.createElement(s.p,null,"The physics simulation has 2 major pieces for actors"),"\n",e.createElement(s.ol,null,"\n",e.createElement(s.li,null,e.createElement(s.a,{href:"/docs/api/edge/classes/BodyComponent.html",title:"View 'BodyComponent' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"BodyComponent")," - Controls the motion and qualities of the physics simulation"),"\n",e.createElement(s.li,null,e.createElement(s.a,{href:"/docs/api/edge/classes/ColliderComponent.html",title:"View 'ColliderComponent' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"ColliderComponent")," - Stores the geometry of any collider and performs overlap testing"),"\n"),"\n",e.createElement(s.h3,{id:"actors",style:{position:"relative"}},e.createElement(s.a,{href:"#actors","aria-label":"actors permalink",className:"anchor before"},e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Actors"),"\n",e.createElement(s.p,null,"Actors come out of the box with both of these components, an implicitly created ",e.createElement(s.a,{href:"/docs/api/edge/classes/BodyComponent.html",title:"View 'BodyComponent' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"BodyComponent")," and a ",e.createElement(s.a,{href:"/docs/api/edge/classes/ColliderComponent.html",title:"View 'ColliderComponent' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"ColliderComponent"),"\nof a ",e.createElement(s.a,{href:"",title:"Missing link to 'ConvexPolygon' docs. We will happily accept a PR to fix this! 🙏",className:"tsdoc-link tsdoc-link--missing tsdoc-link--aliased",target:"_blank"},"box")," that matches the specified ",e.createElement(s.code,null,"width")," and ",e.createElement(s.code,null,"height"),", or a ",e.createElement(s.a,{href:"/docs/api/edge/classes/CircleCollider.html",title:"View 'CircleCollider' in Excalibur.js Edge API docs",className:"tsdoc-link tsdoc-link--aliased",target:"_blank"},"circle")),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="typescript"><pre class="language-typescript"><code class="language-typescript"><span class="token keyword">const</span> actor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  pos<span class="token operator">:</span> ex<span class="token punctuation">.</span><span class="token function">vec</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n  height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n  collisionType<span class="token operator">:</span> ex<span class="token punctuation">.</span>CollisionType<span class="token punctuation">.</span>Active<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> builtInBox <span class="token operator">=</span> actor<span class="token punctuation">.</span>collider<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",e.createElement(s.h3,{id:"entities",style:{position:"relative"}},e.createElement(s.a,{href:"#entities","aria-label":"entities permalink",className:"anchor before"},e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Entities"),"\n",e.createElement(s.p,null,"Reminder entities don't have anything pre-built, all Actors are Entities, but with the common built in features included."),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="typescript"><pre class="language-typescript"><code class="language-typescript"><span class="token keyword">const</span> entity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Entity</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token keyword">new</span> <span class="token class-name">TransformComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">new</span> <span class="token class-name">BodyComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">new</span> <span class="token class-name">ColliderComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> tx <span class="token operator">=</span> entity<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>TransformComponent<span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> body <span class="token operator">=</span> entity<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>BodyComponent<span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> collider <span class="token operator">=</span> entity<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ColliderComponent<span class="token punctuation">)</span></code></pre></div>'}}),"\n",e.createElement(s.h2,{id:"collision-system-under-the-hood",style:{position:"relative"}},e.createElement(s.a,{href:"#collision-system-under-the-hood","aria-label":"collision system under the hood permalink",className:"anchor before"},e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Collision System Under the Hood"),"\n",e.createElement(s.h2,{id:"example-active-activeactive-fixed-scenario",style:{position:"relative"}},e.createElement(s.a,{href:"#example-active-activeactive-fixed-scenario","aria-label":"example active activeactive fixed scenario permalink",className:"anchor before"},e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Example Active-Active/Active-Fixed scenario"),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token comment">// setup game</span>\n<span class="token keyword">const</span> game <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Engine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  width<span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>\n  height<span class="token operator">:</span> <span class="token number">400</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// use rigid body</span>\nex<span class="token punctuation">.</span>Physics<span class="token punctuation">.</span>collisionResolutionStrategy <span class="token operator">=</span> ex<span class="token punctuation">.</span>CollisionResolutionStrategy<span class="token punctuation">.</span>RigidBody<span class="token punctuation">;</span>\n<span class="token comment">// set global acceleration simulating gravity pointing down</span>\nex<span class="token punctuation">.</span>Physics<span class="token punctuation">.</span>acc<span class="token punctuation">.</span><span class="token function">setTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">700</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> block <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  pos<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Vector</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  width<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n  height<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n  color<span class="token operator">:</span> ex<span class="token punctuation">.</span>Color<span class="token punctuation">.</span>Blue\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nblock<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">useBoxCollider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// useBoxCollision is the default, technically optional</span>\nblock<span class="token punctuation">.</span>body<span class="token punctuation">.</span>collider<span class="token punctuation">.</span>type <span class="token operator">=</span> ex<span class="token punctuation">.</span>CollisionType<span class="token punctuation">.</span>Active<span class="token punctuation">;</span>\ngame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// or</span>\n\n<span class="token keyword">const</span> block <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    pos<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Vector</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    color<span class="token operator">:</span> ex<span class="token punctuation">.</span>Color<span class="token punctuation">.</span>Blue<span class="token punctuation">,</span>\n    body<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Body</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        collider<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Collider</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            type<span class="token operator">:</span> ex<span class="token punctuation">.</span>CollisionType<span class="token punctuation">.</span>Active<span class="token punctuation">,</span>\n            shape<span class="token operator">:</span> ex<span class="token punctuation">.</span>Shape<span class="token punctuation">.</span><span class="token function">Box</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  x<span class="token operator">:</span> <span class="token number">301</span><span class="token punctuation">,</span>\n  y<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n  width<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n  height<span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>\n  color<span class="token operator">:</span> ex<span class="token punctuation">.</span>Color<span class="token punctuation">.</span>Red\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ncircle<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">useCircleCollider</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ncircle<span class="token punctuation">.</span>body<span class="token punctuation">.</span>collider<span class="token punctuation">.</span>type <span class="token operator">=</span> ex<span class="token punctuation">.</span>CollisionType<span class="token punctuation">.</span>Active<span class="token punctuation">;</span>\ngame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>circle<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// or</span>\n\n<span class="token keyword">const</span> circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    pos<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Vector</span><span class="token punctuation">(</span><span class="token number">301</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    color<span class="token operator">:</span> ex<span class="token punctuation">.</span>Color<span class="token punctuation">.</span>Red<span class="token punctuation">,</span>\n    body<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Body</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        collider<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Collider</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            shape<span class="token operator">:</span> ex<span class="token punctuation">.</span>Shape<span class="token punctuation">.</span><span class="token function">Circle</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            type<span class="token operator">:</span> ex<span class="token punctuation">.</span>CollisionType<span class="token punctuation">.</span>Active\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> ground <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Actor</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  x<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>\n  y<span class="token operator">:</span> <span class="token number">380</span><span class="token punctuation">,</span>\n  width<span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>\n  height<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n  color<span class="token operator">:</span> ex<span class="token punctuation">.</span>Color<span class="token punctuation">.</span>Black<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nground<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">useBoxCollider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// optional</span>\nground<span class="token punctuation">.</span>body<span class="token punctuation">.</span>collider<span class="token punctuation">.</span>type <span class="token operator">=</span> ex<span class="token punctuation">.</span>CollisionType<span class="token punctuation">.</span>Fixed<span class="token punctuation">;</span>\n\ngame<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ground<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// start the game</span>\n\ngame<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}))}var o=function(n){void 0===n&&(n={});const{wrapper:s}=Object.assign({},(0,t.ah)(),n.components);return s?e.createElement(s,n,e.createElement(p,n)):p(n)};var c=a(4854),l=a(2436),i=a(2030),u=a(7306),r=a(2768),k=a(871),m=a(7924),d=a(9813);const h={Link:c.rU,Note:r.Z,Example:k.Z,IFrameEmbed:m.Z,CodeSandboxEmbed:d.Z},g=n=>{let{toc:s,releases:a}=n;return e.createElement("div",{id:"docs-toc",className:"ui fluid vertical docs text menu"},e.createElement("a",{id:"open-toc",className:"ui button docs-open",href:"#open-toc"},e.createElement("i",{className:"hamburger icon"})," ",e.createElement("span",{className:"toc-closed"},"Open")," Table of Contents"),e.createElement("a",{className:"ui button docs-close",href:"#docs-content"},e.createElement("i",{className:"hamburger icon"})," ",e.createElement("span",{className:"toc-opened"},"Close")," Table of Contents"),e.createElement("div",{id:"user-guides",className:"header item"}," Documentation"),(()=>{const n={};for(let a of s)n[a.frontmatter.section]||(n[a.frontmatter.section]=[]),n[a.frontmatter.section].push(a);return Object.keys(n).map((s=>e.createElement(e.Fragment,{key:s},e.createElement("section",null,e.createElement(c.rU,{className:"item active",style:{fontSize:"1.2em"},to:n[s][0].frontmatter.path},s),e.createElement("div",{className:"sub item"},e.createElement("div",{className:"menu"},n[s].map((n=>{let{frontmatter:s}=n;return e.createElement(c.rU,{key:s.path,activeClassName:"active",className:"item",style:{fontSize:"1em"},to:s.path},s.title)}))))))))})(),e.createElement("a",{className:"item",href:"/examples/"}," Examples"),e.createElement("div",{className:"header item"},"API Reference"),e.createElement("a",{className:"item",href:"/docs/api/edge/"}," Edge (latest)"),a.map((n=>e.createElement("a",{key:n.tag.name,className:"item",href:"/docs/api/"+n.tag.name+"/"},n.tag.name))))},y=()=>e.createElement("div",{className:"docs-search"},e.createElement(l.F,{apiKey:"f8e274d9f62a3088bb54ab80f766d740",appId:"IVI5ONIKWP",indexName:"excaliburjs"})),f=n=>{let{data:s}=n;return e.createElement(e.Fragment,null,e.createElement("title",null,s.page.frontmatter.title),e.createElement("link",{rel:"preconnect",href:"https://IVI5ONIKWP-dsn.algolia.net",crossOrigin:"true"}),e.createElement("link",{rel:"stylesheet",href:"https://fonts.googleapis.com/css?family=Libre+Baskerville:400,400i,700"}))};function b(n){let{data:s,children:a}=n;const{page:p,toc:o,github:{data:{repository:{releases:c}}}}=s,{frontmatter:l}=p;return e.createElement(i.Z,null,e.createElement(u.Z),e.createElement("div",{className:"ui page stackable relaxed grid"},e.createElement("div",{className:"four wide column"},e.createElement(y),e.createElement(g,{toc:o.edges.map((n=>n.node)),releases:c.edges.map((n=>n.node))})),e.createElement("div",{className:"twelve wide column"},e.createElement("div",{className:"ui left aligned container"},e.createElement("h1",null,l.title),e.createElement("div",{id:"docs-content",className:"docs-content"},e.createElement(t.Zo,{components:h},a))))))}function E(n){return e.createElement(b,n,e.createElement(o,n))}}}]);
//# sourceMappingURL=component---src-templates-docs-page-template-js-content-file-path-docs-08-a-physics-mdx-8e3ce5eb43d8e5b58dc1.js.map