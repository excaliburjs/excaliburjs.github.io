"use strict";(self.webpackChunkexcaliburjs_github_io=self.webpackChunkexcaliburjs_github_io||[]).push([[3353],{6766:function(n,a,s){s.r(a),s.d(a,{Head:function(){return g},default:function(){return v}});var e=s(1151),t=s(7294);function c(n){const a=Object.assign({h2:"h2",a:"a",span:"span",p:"p",code:"code"},(0,e.ah)(),n.components);return t.createElement(t.Fragment,null,t.createElement(a.h2,{id:"random",style:{position:"relative"}},t.createElement(a.a,{href:"#random","aria-label":"random permalink",className:"anchor before"},t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Random"),"\n",t.createElement(a.p,null,"You can instantiate the ",t.createElement(a.a,{href:"/docs/api/edge/classes/Random.html",title:"View 'Random' in Excalibur.js Edge API docs",className:"tsdoc-link",target:"_blank"},"Random")," class with an optional seed number. You can\nreuse this seed anytime to get the exact sequence of random numbers back. If no\nseed is provided, it uses ",t.createElement(a.code,null,"Date.now()")," ticks as the seed."),"\n",t.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token keyword">const</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ex</span><span class="token punctuation">.</span><span class="token function">Random</span><span class="token punctuation">(</span><span class="token number">1234</span><span class="token punctuation">)</span>\n\n<span class="token comment">// random integer between [min, max]</span>\nrand<span class="token punctuation">.</span><span class="token function">integer</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>\n\n<span class="token comment">// random floating number between [min, max]</span>\nrand<span class="token punctuation">.</span><span class="token function">floating</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>\n\n<span class="token comment">// random true or false</span>\nrand<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token comment">// random true or false with 40% likelihood of being true</span>\nrand<span class="token punctuation">.</span><span class="token function">bool</span><span class="token punctuation">(</span><span class="token number">0.4</span><span class="token punctuation">)</span>\n\n<span class="token comment">// next floating point between [0, 1]</span>\nrand<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment">// next integer between 0 and Number.MAX_SAFE_INTEGER</span>\nrand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment">// pick a random element from an array</span>\nrand<span class="token punctuation">.</span><span class="token function">pickOne</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token comment">// pick a 2 random elements from an array</span>\nrand<span class="token punctuation">.</span><span class="token function">pickSet</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token comment">// pick a 4 random elements from an array, allowing duplicates</span>\nrand<span class="token punctuation">.</span><span class="token function">pickSet</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>\n\n<span class="token comment">// generate an array of 9 random numbers between [min, max]</span>\nrand<span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>\n\n<span class="token comment">// randomly shuffle an array using Fisher/Yates algorithm</span>\nrand<span class="token punctuation">.</span><span class="token function">shuffle</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token comment">// Multi-sided dice helpers</span>\nrand<span class="token punctuation">.</span><span class="token function">d4</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nrand<span class="token punctuation">.</span><span class="token function">d6</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nrand<span class="token punctuation">.</span><span class="token function">d8</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nrand<span class="token punctuation">.</span><span class="token function">d10</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nrand<span class="token punctuation">.</span><span class="token function">d12</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nrand<span class="token punctuation">.</span><span class="token function">d20</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"A seeded random is very useful in games to do things like terrain generation, procedural\ncontent generation, etc. It allows you easily debug your algorithms by reusing\nthe same seed, as well as to ensure your algorithms are deterministic."))}var p=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,e.ah)(),n.components);return a?t.createElement(a,n,t.createElement(c,n)):c(n)},o=s(4854),l=s(2436),u=s(2030),r=s(7306),i=s(2768),m=s(871),k=s(7924),d=s(9813);const f={Link:o.rU,Note:i.Z,Example:m.Z,IFrameEmbed:k.Z,CodeSandboxEmbed:d.Z},b=n=>{let{toc:a,releases:s}=n;return t.createElement("div",{id:"docs-toc",className:"ui fluid vertical docs text menu"},t.createElement("a",{id:"open-toc",className:"ui button docs-open",href:"#open-toc"},t.createElement("i",{className:"hamburger icon"})," ",t.createElement("span",{className:"toc-closed"},"Open")," Table of Contents"),t.createElement("a",{className:"ui button docs-close",href:"#docs-content"},t.createElement("i",{className:"hamburger icon"})," ",t.createElement("span",{className:"toc-opened"},"Close")," Table of Contents"),t.createElement("div",{id:"user-guides",className:"header item"}," Documentation"),(()=>{const n={};for(let s of a)n[s.frontmatter.section]||(n[s.frontmatter.section]=[]),n[s.frontmatter.section].push(s);return Object.keys(n).map((a=>t.createElement(t.Fragment,{key:a},t.createElement("section",null,t.createElement(o.rU,{className:"item active",style:{fontSize:"1.2em"},to:n[a][0].frontmatter.path},a),t.createElement("div",{className:"sub item"},t.createElement("div",{className:"menu"},n[a].map((n=>{let{frontmatter:a}=n;return t.createElement(o.rU,{key:a.path,activeClassName:"active",className:"item",style:{fontSize:"1em"},to:a.path},a.title)}))))))))})(),t.createElement("a",{className:"item",href:"/examples/"}," Examples"),t.createElement("div",{className:"header item"},"API Reference"),t.createElement("a",{className:"item",href:"/docs/api/edge/"}," Edge (latest)"),s.map((n=>t.createElement("a",{key:n.tag.name,className:"item",href:"/docs/api/"+n.tag.name+"/"},n.tag.name))))},h=()=>t.createElement("div",{className:"docs-search"},t.createElement(l.F,{apiKey:"f8e274d9f62a3088bb54ab80f766d740",appId:"IVI5ONIKWP",indexName:"excaliburjs"})),g=n=>{let{data:a}=n;return t.createElement(t.Fragment,null,t.createElement("title",null,a.page.frontmatter.title),t.createElement("link",{rel:"preconnect",href:"https://IVI5ONIKWP-dsn.algolia.net",crossOrigin:"true"}),t.createElement("link",{rel:"stylesheet",href:"https://fonts.googleapis.com/css?family=Libre+Baskerville:400,400i,700"}))};function E(n){let{data:a,children:s}=n;const{page:c,toc:p,github:{data:{repository:{releases:o}}}}=a,{frontmatter:l}=c;return t.createElement(u.Z,null,t.createElement(r.Z),t.createElement("div",{className:"ui page stackable relaxed grid"},t.createElement("div",{className:"four wide column"},t.createElement(h),t.createElement(b,{toc:p.edges.map((n=>n.node)),releases:o.edges.map((n=>n.node))})),t.createElement("div",{className:"twelve wide column"},t.createElement("div",{className:"ui left aligned container"},t.createElement("h1",null,l.title),t.createElement("div",{id:"docs-content",className:"docs-content"},t.createElement(e.Zo,{components:f},s))))))}function v(n){return t.createElement(E,n,t.createElement(p,n))}}}]);
//# sourceMappingURL=component---src-templates-docs-page-template-js-content-file-path-docs-07-random-mdx-981dda4161e50a9f3dc2.js.map