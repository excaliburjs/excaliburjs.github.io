{"version":3,"file":"component---src-templates-docs-page-template-js-content-file-path-home-runner-work-excaliburjs-github-io-excaliburjs-github-io-docs-99-custom-renderer-plugins-mdx-480fb6b3804bf6d9fe61.js","mappings":"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","sources":["webpack://excaliburjs.github.io/./docs/99-custom-renderer-plugins.mdx","webpack://excaliburjs.github.io/./src/templates/DocsPageTemplate.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    span: \"span\"\n  }, _provideComponents(), props.components), {Note} = _components;\n  if (!Note) _missingMdxReference(\"Note\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Excalibur knows how to draw many types graphics to the screen by default comes with those pre-installed into the \", React.createElement(_components.a, {\n    href: \"/docs/api/edge/interfaces/ExcaliburGraphicsContext.html\",\n    title: \"View 'ExcaliburGraphicsContext' in Excalibur.js Edge API docs\",\n    className: \"tsdoc-link\",\n    target: \"_blank\"\n  }, \"ExcaliburGraphicsContext\"), \". However, you may have a unique requirement to provide custom WebGL commands into excalibur, this can be done with a custom renderer plugin.\"), \"\\n\", React.createElement(Note, {\n    variant: \"warning\"\n  }, React.createElement(_components.p, null, \"This is an advanced API it is recommended you use built in graphics unless you are comfortable with building WebGL geometry and shaders.\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"registering-a-renderer-plugin\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#registering-a-renderer-plugin\",\n    \"aria-label\": \"registering a renderer plugin permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Registering a renderer plugin\"), \"\\n\", React.createElement(_components.p, null, \"Registering a renderer with the graphics context will allow you to call it's draw method during your game.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">const</span> game <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ex</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Engine</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\ngame<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">start</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// register</span>\\n    game<span class=\\\"token punctuation\\\">.</span>graphicsContext<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">register</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">MyCustomRenderer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// call from a graphics callback or event</span>\\n<span class=\\\"token keyword\\\">const</span> actor <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ex</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Actor</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nactor<span class=\\\"token punctuation\\\">.</span>graphics<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">onPostDraw</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>graphicsContext<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    graphicsContext<span class=\\\"token punctuation\\\">.</span><span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">draw</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span>MyCustomRenderer<span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'myrenderer'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"writing-a-custom-render-plugin\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#writing-a-custom-render-plugin\",\n    \"aria-label\": \"writing a custom render plugin permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Writing a custom render plugin\"), \"\\n\", React.createElement(_components.p, null, \"In order to build a custom renderer extend the \", React.createElement(_components.a, {\n    href: \"\",\n    title: \"Missing link to 'RendererPlugin' docs. We will happily accept a PR to fix this! 🙏\",\n    className: \"tsdoc-link tsdoc-link--missing\",\n    target: \"_blank\"\n  }, \"RendererPlugin\"), \" interface\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">MyCustomRenderer</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">ex</span><span class=\\\"token punctuation\\\">.</span>RendererPlugin <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">/**\\n   * Unique type name for this renderer plugin\\n   */</span>\\n  <span class=\\\"token keyword\\\">readonly</span> type<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'myrenderer'</span>\\n\\n  <span class=\\\"token comment\\\">/**\\n   * Render priority tie breaker when drawings are at the same z index\\n   * @warning Not yet used by excalibur\\n   */</span>\\n  priority<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>\\n\\n  <span class=\\\"token comment\\\">/**\\n   * Initialize your renderer\\n   *\\n   * @param gl\\n   * @param context\\n   */</span>\\n  <span class=\\\"token function\\\">initialize</span><span class=\\\"token punctuation\\\">(</span>\\n    gl<span class=\\\"token operator\\\">:</span> WebGLRenderingContext<span class=\\\"token punctuation\\\">,</span>\\n    context<span class=\\\"token operator\\\">:</span> ExcaliburGraphicsContextWebGL\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// initialize and compile shader</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token comment\\\">/**\\n   * Issue a draw command to draw something to the screen\\n   * @param args\\n   */</span>\\n  <span class=\\\"token function\\\">draw</span><span class=\\\"token punctuation\\\">(</span>some<span class=\\\"token operator\\\">:</span> ex<span class=\\\"token punctuation\\\">.</span>Vector<span class=\\\"token punctuation\\\">,</span> args<span class=\\\"token operator\\\">:</span> ex<span class=\\\"token punctuation\\\">.</span>Color<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// update internal state with draw command with the args</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token comment\\\">/**\\n   * @returns if there are any pending draws in the renderer\\n   */</span>\\n  <span class=\\\"token function\\\">hasPendingDraws</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">boolean</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// if there are any un-flushed drawings</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">false</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token comment\\\">/**\\n   * Flush any pending graphics draws to the screen\\n   */</span>\\n  <span class=\\\"token function\\\">flush</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// flush all pending draws to the screen</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"For example this is the \", React.createElement(_components.a, {\n    href: \"\",\n    title: \"Missing link to 'PointRenderer' docs. We will happily accept a PR to fix this! 🙏\",\n    className: \"tsdoc-link tsdoc-link--missing\",\n    target: \"_blank\"\n  }, \"PointRenderer\"), \" implementation\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\"><pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">PointRenderer</span> <span class=\\\"token keyword\\\">implements</span> <span class=\\\"token class-name\\\">RendererPlugin</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">readonly</span> type <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'ex.point'</span>\\n  <span class=\\\"token keyword\\\">public</span> priority<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>\\n  <span class=\\\"token keyword\\\">private</span> _shader<span class=\\\"token operator\\\">:</span> Shader\\n  <span class=\\\"token keyword\\\">private</span> _maxPoints<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">10922</span>\\n  <span class=\\\"token keyword\\\">private</span> _buffer<span class=\\\"token operator\\\">:</span> VertexBuffer\\n  <span class=\\\"token keyword\\\">private</span> _layout<span class=\\\"token operator\\\">:</span> VertexLayout\\n  <span class=\\\"token keyword\\\">private</span> _gl<span class=\\\"token operator\\\">:</span> WebGLRenderingContext\\n  <span class=\\\"token keyword\\\">private</span> _context<span class=\\\"token operator\\\">:</span> ExcaliburGraphicsContextWebGL\\n  <span class=\\\"token keyword\\\">private</span> _pointCount<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>\\n  <span class=\\\"token keyword\\\">private</span> _vertexIndex<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>\\n  <span class=\\\"token function\\\">initialize</span><span class=\\\"token punctuation\\\">(</span>\\n    gl<span class=\\\"token operator\\\">:</span> WebGLRenderingContext<span class=\\\"token punctuation\\\">,</span>\\n    context<span class=\\\"token operator\\\">:</span> ExcaliburGraphicsContextWebGL\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_gl <span class=\\\"token operator\\\">=</span> gl\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_context <span class=\\\"token operator\\\">=</span> context\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_shader <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Shader</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      vertexSource<span class=\\\"token operator\\\">:</span> pointVertexSource<span class=\\\"token punctuation\\\">,</span>\\n      fragmentSource<span class=\\\"token operator\\\">:</span> pointFragmentSource<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_shader<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">compile</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_shader<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">use</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_shader<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setUniformMatrix</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'u_matrix'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_context<span class=\\\"token punctuation\\\">.</span>ortho<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_buffer <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">VertexBuffer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      size<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">7</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_maxPoints<span class=\\\"token punctuation\\\">,</span>\\n      type<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'dynamic'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_layout <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">VertexLayout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      shader<span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_shader<span class=\\\"token punctuation\\\">,</span>\\n      vertexBuffer<span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_buffer<span class=\\\"token punctuation\\\">,</span>\\n      attributes<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'a_position'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'a_color'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'a_size'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">draw</span><span class=\\\"token punctuation\\\">(</span>point<span class=\\\"token operator\\\">:</span> Vector<span class=\\\"token punctuation\\\">,</span> color<span class=\\\"token operator\\\">:</span> Color<span class=\\\"token punctuation\\\">,</span> size<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// Force a render if the batch is full</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">_isFull</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">flush</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_pointCount<span class=\\\"token operator\\\">++</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> transform <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_context<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getTransform</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">const</span> opacity <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_context<span class=\\\"token punctuation\\\">.</span>opacity\\n\\n    <span class=\\\"token keyword\\\">const</span> finalPoint <span class=\\\"token operator\\\">=</span> transform<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">multv</span><span class=\\\"token punctuation\\\">(</span>point<span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> vertexBuffer <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_buffer<span class=\\\"token punctuation\\\">.</span>bufferData\\n    vertexBuffer<span class=\\\"token punctuation\\\">[</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_vertexIndex<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> finalPoint<span class=\\\"token punctuation\\\">.</span>x\\n    vertexBuffer<span class=\\\"token punctuation\\\">[</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_vertexIndex<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> finalPoint<span class=\\\"token punctuation\\\">.</span>y\\n    vertexBuffer<span class=\\\"token punctuation\\\">[</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_vertexIndex<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> color<span class=\\\"token punctuation\\\">.</span>r <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">255</span>\\n    vertexBuffer<span class=\\\"token punctuation\\\">[</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_vertexIndex<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> color<span class=\\\"token punctuation\\\">.</span>g <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">255</span>\\n    vertexBuffer<span class=\\\"token punctuation\\\">[</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_vertexIndex<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> color<span class=\\\"token punctuation\\\">.</span>b <span class=\\\"token operator\\\">/</span> <span class=\\\"token number\\\">255</span>\\n    vertexBuffer<span class=\\\"token punctuation\\\">[</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_vertexIndex<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> color<span class=\\\"token punctuation\\\">.</span>a <span class=\\\"token operator\\\">*</span> opacity\\n    vertexBuffer<span class=\\\"token punctuation\\\">[</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_vertexIndex<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span>\\n      size <span class=\\\"token operator\\\">*</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span>transform<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getScaleX</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> transform<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getScaleY</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">private</span> <span class=\\\"token function\\\">_isFull</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_pointCount <span class=\\\"token operator\\\">>=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_maxPoints<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">true</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">false</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">hasPendingDraws</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">boolean</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_pointCount <span class=\\\"token operator\\\">!==</span> <span class=\\\"token number\\\">0</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">flush</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// nothing to draw early exit</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_pointCount <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> gl <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_gl\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_shader<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">use</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_layout<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">use</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_shader<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setUniformMatrix</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'u_matrix'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_context<span class=\\\"token punctuation\\\">.</span>ortho<span class=\\\"token punctuation\\\">)</span>\\n\\n    gl<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">drawArrays</span><span class=\\\"token punctuation\\\">(</span>gl<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">POINTS</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_pointCount<span class=\\\"token punctuation\\\">)</span>\\n\\n    GraphicsDiagnostics<span class=\\\"token punctuation\\\">.</span>DrawnImagesCount <span class=\\\"token operator\\\">+=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_pointCount\\n    GraphicsDiagnostics<span class=\\\"token punctuation\\\">.</span>DrawCallCount<span class=\\\"token operator\\\">++</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_pointCount <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>_vertexIndex <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/excaliburjs.github.io/excaliburjs.github.io/docs/99-custom-renderer-plugins.mdx\";\nimport React from 'react';\nimport {graphql, Link} from 'gatsby';\nimport {MDXProvider} from '@mdx-js/react';\nimport {DocSearch} from '@docsearch/react';\nimport Layout from '../components/layout';\nimport Header from '../components/header';\nimport Note from '../components/docs/Note';\nimport Example from '../components/docs/Example';\nimport IFrameEmbed from '../components/docs/IFrameEmbed';\nimport CodeSandboxEmbed from '../components/docs/CodeSandboxEmbed';\nconst shortcodes = {\n  Link,\n  Note,\n  Example,\n  IFrameEmbed,\n  CodeSandboxEmbed\n};\nconst Toc = ({toc: pages, releases}) => React.createElement(\"div\", {\n  id: \"docs-toc\",\n  className: \"ui fluid vertical docs text menu\"\n}, React.createElement(\"a\", {\n  id: \"open-toc\",\n  className: \"ui button docs-open\",\n  href: \"#open-toc\"\n}, React.createElement(\"i\", {\n  className: \"hamburger icon\"\n}), ' ', React.createElement(\"span\", {\n  className: \"toc-closed\"\n}, \"Open\"), \" Table of Contents\"), React.createElement(\"a\", {\n  className: \"ui button docs-close\",\n  href: \"#docs-content\"\n}, React.createElement(\"i\", {\n  className: \"hamburger icon\"\n}), ' ', React.createElement(\"span\", {\n  className: \"toc-opened\"\n}, \"Close\"), \" Table of Contents\"), React.createElement(\"div\", {\n  id: \"user-guides\",\n  className: \"header item\"\n}, \" Documentation\"), (() => {\n  const sections = {};\n  for (let page of pages) {\n    if (!sections[page.frontmatter.section]) {\n      sections[page.frontmatter.section] = [];\n    }\n    sections[page.frontmatter.section].push(page);\n  }\n  return Object.keys(sections).map(section => React.createElement(React.Fragment, {\n    key: section\n  }, React.createElement(\"section\", null, React.createElement(Link, {\n    className: \"item active\",\n    style: {\n      fontSize: 1.2 + 'em'\n    },\n    to: sections[section][0].frontmatter.path\n  }, section), React.createElement(\"div\", {\n    className: \"sub item\"\n  }, React.createElement(\"div\", {\n    className: \"menu\"\n  }, sections[section].map(({frontmatter}) => React.createElement(Link, {\n    key: frontmatter.path,\n    activeClassName: \"active\",\n    className: \"item\",\n    style: {\n      fontSize: 1.0 + 'em'\n    },\n    to: frontmatter.path\n  }, frontmatter.title)))))));\n})(), React.createElement(\"a\", {\n  className: \"item\",\n  href: \"/examples/\"\n}, \" Examples\"), React.createElement(\"div\", {\n  className: \"header item\"\n}, \"API Reference\"), React.createElement(\"a\", {\n  className: \"item\",\n  href: \"/docs/api/edge/\"\n}, \" Edge (latest)\"), releases.map(release => React.createElement(\"a\", {\n  key: release.tag.name,\n  className: \"item\",\n  href: `/docs/api/${release.tag.name}/`\n}, release.tag.name)));\nconst Search = () => React.createElement(\"div\", {\n  className: \"docs-search\"\n}, React.createElement(DocSearch, {\n  apiKey: \"f8e274d9f62a3088bb54ab80f766d740\",\n  appId: \"IVI5ONIKWP\",\n  indexName: \"excaliburjs\"\n}));\nexport const Head = ({data}) => React.createElement(React.Fragment, null, React.createElement(\"title\", null, data.page.frontmatter.title), React.createElement(\"link\", {\n  rel: \"preconnect\",\n  href: \"https://IVI5ONIKWP-dsn.algolia.net\",\n  crossOrigin: \"true\"\n}), React.createElement(\"link\", {\n  rel: \"stylesheet\",\n  href: \"https://fonts.googleapis.com/css?family=Libre+Baskerville:400,400i,700\"\n}));\nfunction Template({data, children}) {\n  const {page, toc, github: {data: {repository: {releases}}}} = data;\n  const {frontmatter} = page;\n  return React.createElement(Layout, null, React.createElement(Header), React.createElement(\"div\", {\n    className: \"ui page stackable relaxed grid\"\n  }, React.createElement(\"div\", {\n    className: \"four wide column\"\n  }, React.createElement(Search), React.createElement(Toc, {\n    toc: toc.edges.map(e => e.node),\n    releases: releases.edges.map(r => r.node)\n  })), React.createElement(\"div\", {\n    className: \"twelve wide column\"\n  }, React.createElement(\"div\", {\n    className: \"ui left aligned container\"\n  }, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    id: \"docs-content\",\n    className: \"docs-content\"\n  }, React.createElement(MDXProvider, {\n    components: shortcodes\n  }, children))))));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Template, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query DocsByPath($id: String!) {\n    github: githubData {\n      data {\n        repository {\n          releases {\n            edges {\n              node {\n                publishedAt\n                name\n                tag {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    toc: allMdx(sort: { internal: { contentFilePath: ASC } }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            path\n            section\n          }\n        }\n      }\n    }\n\n    page: mdx(id: { eq: $id }) {\n      body\n      frontmatter {\n        path\n        title\n        section\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","h2","span","_provideComponents","components","Note","id","component","Error","_missingMdxReference","React","href","title","className","target","variant","style","position","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","shortcodes","Link","Example","IFrameEmbed","CodeSandboxEmbed","Toc","_ref","toc","pages","releases","sections","page","frontmatter","section","push","keys","map","key","fontSize","to","path","_ref2","activeClassName","release","tag","name","Search","DocSearch","apiKey","appId","indexName","Head","_ref3","data","rel","crossOrigin","Template","children","github","repository","Layout","Header","edges","e","node","r","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}